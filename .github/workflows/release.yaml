name: "Release"

'on':
  push:
    branches:
      - main

jobs:
  full-test:
    name: "Run Full Test Suite (Release)"
    if: startsWith(github.event.head_commit.message, '[release:minor]') ||
      startsWith(github.event.head_commit.message, '[release:major]') ||
      startsWith(github.event.head_commit.message, '[release:patch]')
    uses: Code-Inspect/flowr/.github/workflows/full-test.yaml@main

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: ['full-test']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: "Setup the Environment"
        uses: Code-Inspect/flowr/.github/actions/setup@main
        with:
          node-version: "21.6.x"

      - name: Name and Email for Git (config)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install Dependencies
        run: npm ci

      - name: Release
        run: |
          step=$(echo "$MESSAGE" | sed -n -E 's/\[release:(patch|minor|major)].*/\1/p')
          title=$(echo "$MESSAGE" | sed -n -E 's/\[release:(patch|minor|major)] (.*)/\2/p')

          if [ -z "$step" ]; then
            echo "fatal: Release step not found in commit message."
            exit 1
          fi

          npm run release -- $step --github.releaseName="Release v\${version} (${title})"
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          # apparently, putting the message into an env variable first sanitizes it
          # (see https://github.com/Code-Inspect/flowr/security/code-scanning/29)
          MESSAGE: ${{ github.event.head_commit.message }}

      - name: Ensure up-to-date Dependencies
        run: npm ci

      - name: Publish on NPM
        # we use publish library because flowr itself is a runnable, and we do not want to publish something with extra
        # dist paths etc.
        # besides, we make dead-sure we have a clean directory to work on!
        run: |
          rm -rf dist
          npm run build
          npm run publish-library
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  performance-test:
    name: "Performance Test"
    needs: ['release']
    # we do not run if the release workflow runs it with pushing
    if: startsWith(github.event.head_commit.message, '[release:minor]') ||
      startsWith(github.event.head_commit.message, '[release:major]') ||
      startsWith(github.event.head_commit.message, '[release:patch]')
    uses: Code-Inspect/flowr/.github/workflows/performance-test.yaml@main
    with:
      push: true
    secrets: inherit

  deploy-docker:
    needs: ['performance-test']
    name: "Deploy Docker (only on main)"
    uses: Code-Inspect/flowr/.github/workflows/deploy-docker.yaml@main
    secrets: inherit
